@using Microsoft.AspNet.Identity
@using MackTechGroupProject.Extensions

@model MackTechGroupProject.Models.ProfileViewModel
@{
    ViewBag.Title = "Profile";
}

@using (Html.BeginForm("ProfileInfoEdit", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    

    <div class="form-horizontal">
        <h4>Profile Edit</h4>
        <hr />

        <p><img src="http://placehold.it/400x200" class="user"></p>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />            
                @*
                @Html.EditorFor(model => model.ProfilePic, new { htmlAttributes = new { @Value = @User.Identity.GetUserAddressOne(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })
                *@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressOne, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressOne, new { htmlAttributes = new { @Value = @User.Identity.GetUserAddressOne(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressOne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressTwo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressTwo, new { htmlAttributes = new { @Value = @User.Identity.GetUserAddressTwo(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressTwo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @Value = @User.Identity.GetUserCity(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @Value = @User.Identity.GetUserState(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @Value = @User.Identity.GetUserZipCode(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @Value = @User.Identity.GetUserPhoneNumber(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkOne, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkOne, new { htmlAttributes = new { @Value = @User.Identity.GetUserLinkOne(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkOne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkTwo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkTwo, new { htmlAttributes = new { @Value = @User.Identity.GetUserLinkTwo(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkTwo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkThree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkThree, new { htmlAttributes = new { @Value = @User.Identity.GetUserLinkThree(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkThree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BioInfo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BioInfo, new { htmlAttributes = new { @Value = @User.Identity.GetUserBioInfo(), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BioInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

      
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
